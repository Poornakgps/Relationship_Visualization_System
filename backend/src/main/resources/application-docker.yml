spring:
  application:
    name: flagright-backend
  
  neo4j:
    uri: ${SPRING_NEO4J_URI:bolt://neo4j:7687}
    authentication:
      username: ${SPRING_NEO4J_AUTHENTICATION_USERNAME:neo4j}
      password: ${SPRING_NEO4J_AUTHENTICATION_PASSWORD:password}
    # Connection pool settings for containerized environment
    pool:
      max-connection-pool-size: 50
      connection-acquisition-timeout: 60s
      max-connection-lifetime: 1h
    
server:
  port: ${SERVER_PORT:8080}
  # Optimize for containerized environment
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    keep-alive-timeout: 20000

# Logging configuration for Docker
logging:
  level:
    com.flagright: ${LOGGING_LEVEL_COM_FLAGRIGHT:INFO}
    org.neo4j: ${LOGGING_LEVEL_ORG_NEO4J:WARN}
    org.springframework.data.neo4j: INFO
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  
# Actuator configuration for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    neo4j:
      enabled: true
    disk-space:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# CORS configuration for containerized frontend
cors:
  allowed-origins: 
    - http://localhost:3000
    - http://localhost:80
    - http://frontend:80
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true 